// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssl_visualization.proto

package visualization

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RgbColor struct {
	R                    uint32   `protobuf:"varint,1,opt,name=r,proto3" json:"r,omitempty"`
	G                    uint32   `protobuf:"varint,2,opt,name=g,proto3" json:"g,omitempty"`
	B                    uint32   `protobuf:"varint,3,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RgbColor) Reset()         { *m = RgbColor{} }
func (m *RgbColor) String() string { return proto.CompactTextString(m) }
func (*RgbColor) ProtoMessage()    {}
func (*RgbColor) Descriptor() ([]byte, []int) {
	return fileDescriptor_db2373d4c4bd4508, []int{0}
}

func (m *RgbColor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RgbColor.Unmarshal(m, b)
}
func (m *RgbColor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RgbColor.Marshal(b, m, deterministic)
}
func (m *RgbColor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RgbColor.Merge(m, src)
}
func (m *RgbColor) XXX_Size() int {
	return xxx_messageInfo_RgbColor.Size(m)
}
func (m *RgbColor) XXX_DiscardUnknown() {
	xxx_messageInfo_RgbColor.DiscardUnknown(m)
}

var xxx_messageInfo_RgbColor proto.InternalMessageInfo

func (m *RgbColor) GetR() uint32 {
	if m != nil {
		return m.R
	}
	return 0
}

func (m *RgbColor) GetG() uint32 {
	if m != nil {
		return m.G
	}
	return 0
}

func (m *RgbColor) GetB() uint32 {
	if m != nil {
		return m.B
	}
	return 0
}

type Metadata struct {
	Layer                []string  `protobuf:"bytes,1,rep,name=layer,proto3" json:"layer,omitempty"`
	VisibleByDefault     bool      `protobuf:"varint,2,opt,name=visibleByDefault,proto3" json:"visibleByDefault,omitempty"`
	Order                int32     `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	ColorFill            *RgbColor `protobuf:"bytes,4,opt,name=color_fill,json=colorFill,proto3" json:"color_fill,omitempty"`
	ColorStroke          *RgbColor `protobuf:"bytes,5,opt,name=color_stroke,json=colorStroke,proto3" json:"color_stroke,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_db2373d4c4bd4508, []int{1}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetLayer() []string {
	if m != nil {
		return m.Layer
	}
	return nil
}

func (m *Metadata) GetVisibleByDefault() bool {
	if m != nil {
		return m.VisibleByDefault
	}
	return false
}

func (m *Metadata) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *Metadata) GetColorFill() *RgbColor {
	if m != nil {
		return m.ColorFill
	}
	return nil
}

func (m *Metadata) GetColorStroke() *RgbColor {
	if m != nil {
		return m.ColorStroke
	}
	return nil
}

type LineSegment struct {
	Metadata             *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	StartX               float32   `protobuf:"fixed32,2,opt,name=start_x,json=startX,proto3" json:"start_x,omitempty"`
	StartY               float32   `protobuf:"fixed32,3,opt,name=start_y,json=startY,proto3" json:"start_y,omitempty"`
	EndX                 float32   `protobuf:"fixed32,4,opt,name=end_x,json=endX,proto3" json:"end_x,omitempty"`
	EndY                 float32   `protobuf:"fixed32,5,opt,name=end_y,json=endY,proto3" json:"end_y,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LineSegment) Reset()         { *m = LineSegment{} }
func (m *LineSegment) String() string { return proto.CompactTextString(m) }
func (*LineSegment) ProtoMessage()    {}
func (*LineSegment) Descriptor() ([]byte, []int) {
	return fileDescriptor_db2373d4c4bd4508, []int{2}
}

func (m *LineSegment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LineSegment.Unmarshal(m, b)
}
func (m *LineSegment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LineSegment.Marshal(b, m, deterministic)
}
func (m *LineSegment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LineSegment.Merge(m, src)
}
func (m *LineSegment) XXX_Size() int {
	return xxx_messageInfo_LineSegment.Size(m)
}
func (m *LineSegment) XXX_DiscardUnknown() {
	xxx_messageInfo_LineSegment.DiscardUnknown(m)
}

var xxx_messageInfo_LineSegment proto.InternalMessageInfo

func (m *LineSegment) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *LineSegment) GetStartX() float32 {
	if m != nil {
		return m.StartX
	}
	return 0
}

func (m *LineSegment) GetStartY() float32 {
	if m != nil {
		return m.StartY
	}
	return 0
}

func (m *LineSegment) GetEndX() float32 {
	if m != nil {
		return m.EndX
	}
	return 0
}

func (m *LineSegment) GetEndY() float32 {
	if m != nil {
		return m.EndY
	}
	return 0
}

type Circle struct {
	Metadata             *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CenterX              float32   `protobuf:"fixed32,2,opt,name=center_x,json=centerX,proto3" json:"center_x,omitempty"`
	CenterY              float32   `protobuf:"fixed32,3,opt,name=center_y,json=centerY,proto3" json:"center_y,omitempty"`
	Radius               float32   `protobuf:"fixed32,4,opt,name=radius,proto3" json:"radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Circle) Reset()         { *m = Circle{} }
func (m *Circle) String() string { return proto.CompactTextString(m) }
func (*Circle) ProtoMessage()    {}
func (*Circle) Descriptor() ([]byte, []int) {
	return fileDescriptor_db2373d4c4bd4508, []int{3}
}

func (m *Circle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Circle.Unmarshal(m, b)
}
func (m *Circle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Circle.Marshal(b, m, deterministic)
}
func (m *Circle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Circle.Merge(m, src)
}
func (m *Circle) XXX_Size() int {
	return xxx_messageInfo_Circle.Size(m)
}
func (m *Circle) XXX_DiscardUnknown() {
	xxx_messageInfo_Circle.DiscardUnknown(m)
}

var xxx_messageInfo_Circle proto.InternalMessageInfo

func (m *Circle) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Circle) GetCenterX() float32 {
	if m != nil {
		return m.CenterX
	}
	return 0
}

func (m *Circle) GetCenterY() float32 {
	if m != nil {
		return m.CenterY
	}
	return 0
}

func (m *Circle) GetRadius() float32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

type VisualizationFrame struct {
	SenderId             string         `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	Lines                []*LineSegment `protobuf:"bytes,2,rep,name=lines,proto3" json:"lines,omitempty"`
	Circles              []*Circle      `protobuf:"bytes,3,rep,name=circles,proto3" json:"circles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *VisualizationFrame) Reset()         { *m = VisualizationFrame{} }
func (m *VisualizationFrame) String() string { return proto.CompactTextString(m) }
func (*VisualizationFrame) ProtoMessage()    {}
func (*VisualizationFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_db2373d4c4bd4508, []int{4}
}

func (m *VisualizationFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VisualizationFrame.Unmarshal(m, b)
}
func (m *VisualizationFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VisualizationFrame.Marshal(b, m, deterministic)
}
func (m *VisualizationFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VisualizationFrame.Merge(m, src)
}
func (m *VisualizationFrame) XXX_Size() int {
	return xxx_messageInfo_VisualizationFrame.Size(m)
}
func (m *VisualizationFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_VisualizationFrame.DiscardUnknown(m)
}

var xxx_messageInfo_VisualizationFrame proto.InternalMessageInfo

func (m *VisualizationFrame) GetSenderId() string {
	if m != nil {
		return m.SenderId
	}
	return ""
}

func (m *VisualizationFrame) GetLines() []*LineSegment {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *VisualizationFrame) GetCircles() []*Circle {
	if m != nil {
		return m.Circles
	}
	return nil
}

func init() {
	proto.RegisterType((*RgbColor)(nil), "RgbColor")
	proto.RegisterType((*Metadata)(nil), "Metadata")
	proto.RegisterType((*LineSegment)(nil), "LineSegment")
	proto.RegisterType((*Circle)(nil), "Circle")
	proto.RegisterType((*VisualizationFrame)(nil), "VisualizationFrame")
}

func init() { proto.RegisterFile("ssl_visualization.proto", fileDescriptor_db2373d4c4bd4508) }

var fileDescriptor_db2373d4c4bd4508 = []byte{
	// 392 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xd1, 0x8a, 0xd4, 0x30,
	0x14, 0x86, 0xe9, 0xcc, 0x76, 0xa6, 0x3d, 0x1d, 0x41, 0xa2, 0xb8, 0x15, 0x6f, 0xc6, 0x82, 0x50,
	0x44, 0x7a, 0xb1, 0xfa, 0x04, 0xae, 0x2c, 0x08, 0x7a, 0x93, 0x05, 0x99, 0xb9, 0x2a, 0x69, 0x73,
	0xb6, 0x04, 0x33, 0xa9, 0x24, 0x99, 0x65, 0x2a, 0xf8, 0x0e, 0x3e, 0x8f, 0x4f, 0x27, 0x3d, 0x69,
	0xd7, 0x41, 0x6f, 0xbc, 0xfc, 0xcf, 0x77, 0x92, 0x7e, 0x7f, 0x09, 0x5c, 0x3a, 0xa7, 0xeb, 0x7b,
	0xe5, 0x8e, 0x42, 0xab, 0xef, 0xc2, 0xab, 0xde, 0x54, 0xdf, 0x6c, 0xef, 0xfb, 0xe2, 0x1d, 0x24,
	0xbc, 0x6b, 0xae, 0x7b, 0xdd, 0x5b, 0xb6, 0x81, 0xc8, 0xe6, 0xd1, 0x36, 0x2a, 0x1f, 0xf1, 0x88,
	0x52, 0x97, 0x2f, 0x42, 0xea, 0xc6, 0xd4, 0xe4, 0xcb, 0x90, 0x9a, 0xe2, 0x57, 0x04, 0xc9, 0x67,
	0xf4, 0x42, 0x0a, 0x2f, 0xd8, 0x53, 0x88, 0xb5, 0x18, 0x70, 0x3c, 0xba, 0x2c, 0x53, 0x1e, 0x02,
	0x7b, 0x0d, 0x8f, 0xef, 0x95, 0x53, 0x8d, 0xc6, 0xf7, 0xc3, 0x07, 0xbc, 0x13, 0x47, 0xed, 0xe9,
	0xb6, 0x84, 0xff, 0x33, 0x1f, 0x6f, 0xe8, 0xad, 0x44, 0x4b, 0x1f, 0x88, 0x79, 0x08, 0xac, 0x04,
	0x68, 0x47, 0xaf, 0xfa, 0x4e, 0x69, 0x9d, 0x5f, 0x6c, 0xa3, 0x32, 0xbb, 0x4a, 0xab, 0xd9, 0x96,
	0xa7, 0x04, 0x6f, 0x94, 0xd6, 0xec, 0x0d, 0x6c, 0xc2, 0xa6, 0xf3, 0xb6, 0xff, 0x8a, 0x79, 0xfc,
	0xf7, 0x6e, 0x46, 0xf8, 0x96, 0x68, 0xf1, 0x33, 0x82, 0xec, 0x93, 0x32, 0x78, 0x8b, 0xdd, 0x01,
	0x8d, 0x67, 0xaf, 0x20, 0x39, 0x4c, 0x5d, 0xa8, 0xfd, 0x78, 0x72, 0x2e, 0xc7, 0x1f, 0x10, 0xbb,
	0x84, 0xb5, 0xf3, 0xc2, 0xfa, 0xfa, 0x44, 0x3d, 0x16, 0x7c, 0x45, 0x71, 0xf7, 0x07, 0x0c, 0xe4,
	0x3f, 0x83, 0x3d, 0x7b, 0x02, 0x31, 0x1a, 0x59, 0x9f, 0xc8, 0x7d, 0xc1, 0x2f, 0xd0, 0xc8, 0xdd,
	0x3c, 0x1c, 0x48, 0x32, 0x0c, 0xf7, 0xc5, 0x0f, 0x58, 0x5d, 0x2b, 0xdb, 0x6a, 0xfc, 0x5f, 0x99,
	0xe7, 0x90, 0xb4, 0x68, 0x3c, 0xda, 0x07, 0x9b, 0x75, 0xc8, 0xbb, 0x33, 0x34, 0xfb, 0x4c, 0x68,
	0xcf, 0x9e, 0xc1, 0xca, 0x0a, 0xa9, 0x8e, 0x6e, 0x32, 0x9a, 0x52, 0x71, 0x02, 0xf6, 0xe5, 0xfc,
	0x6d, 0xdc, 0x58, 0x71, 0x40, 0xf6, 0x02, 0x52, 0x87, 0x46, 0xa2, 0xad, 0x95, 0x24, 0x97, 0x94,
	0x27, 0x61, 0xf0, 0x51, 0xb2, 0x02, 0x62, 0xad, 0x0c, 0xba, 0x7c, 0xb1, 0x5d, 0x96, 0xd9, 0xd5,
	0xa6, 0x3a, 0xfb, 0xa3, 0x3c, 0x20, 0xf6, 0x12, 0xd6, 0x2d, 0xb5, 0x72, 0xf9, 0x92, 0xb6, 0xd6,
	0x55, 0x68, 0xc9, 0xe7, 0x79, 0xb3, 0xa2, 0x57, 0xf8, 0xf6, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x62, 0xc0, 0x90, 0x73, 0xa0, 0x02, 0x00, 0x00,
}
